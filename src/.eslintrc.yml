extends:
  - next
rules:
  block-scoped-var: error # 変数のスコープ厳格化
  curly: error # ブロックの中括弧省略不可
  indent: # インデントの空白数: スペース4
    - error
    - 4
  jsx-quotes: # JSXを文字リテラルをシングルクォート限定
    - error
    - prefer-single
  key-spacing: # オブジェクトリテラルのコロン後の空白必須
    - error
    - afterColon: true
  keyword-spacing: # キーワード前後に空白必須
    - error
    - before: true
      after: true
  max-classes-per-file: # 1ファイル内の最大クラス数: 1
    - error
    - 1
  max-depth: # ブロックの最大ネスト数: 4
    - error
    - 4
  max-len: # 1行の最大長: 200文字 ※コメント,URLは無視
    - error 
    - code: 200
      ignoreComments: true
      ignoreUrls: true
  max-lines: # ファイル内の最大行数: 1000行
    - error
    - 1000
  max-lines-per-function: # 関数内の最大行数: 80行
    - error
    - 80
  max-nested-callbacks: # コールバックの最大ネスト数: 3
    - error
    - 3
  no-console: error # console利用不可
  no-debugger: error # debugger不可
  no-empty: error # 空ブロック不可
  no-eq-null: error # nullの厳格比較必須
  no-extra-semi: error # 不要なセミコロンの不可
  no-new: error # 保持しない new の不可
  no-use-before-define: off  # 宣言前の利用許可
  no-var: error # varの使用不可
  require-await: error # await式のない非同期関数を不可
  require-jsdoc: # doc必須
    - error
    - require:
        FunctionDeclaration: true
        MethodDefinition: true
        ClassDeclaration: true
        ArrowFunctionExpression: true
        FunctionExpression: true
  semi: # 最後にセミコロン必須
    - error
    - always
  semi-spacing: # セミコロン前の空白不可
    - error
  semi-style: # セミコロンは最後に付ける
    - error
    - last
  space-unary-ops: # 演算子周りの空白 単語:不可 / 演算子:可
      - error 
      - words: true
        nonwords: false
  spaced-comment: # コメントの最初に空白必須
    - error
    - always
  template-curly-spacing: # テンプレートリテラル内のスペース不可
    - error
    - never
